
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаПроведенияРабот = ТекущаяДатаСеанса();
	
	ИнициализироватьПараметрыПланировщика();
	ИнициализироватьИзмеренияПланировщика();	
	ОбновитьПланировщик(ДатаПроведенияРабот);
	
КонецПроцедуры



&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ВКМ_ОбслуживаниеКлиента" Тогда
		ИнициализироватьИзмеренияПланировщика();	
		ОбновитьПланировщик(ДатаПроведенияРабот);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ДатаПроведенияРаботПриИзменении(Элемент)
		ОбновитьПланировщик(ДатаПроведенияРабот);
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПриСменеТекущегоПериодаОтображения(Элемент, ТекущиеПериодыОтображения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДатаПроведенияРабот = ТекущиеПериодыОтображения[0].Начало;
	ОбновитьПланировщик(ДатаПроведенияРабот);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередНачаломБыстрогоРедактирования(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Ключ", Элемент.ВыделенныеЭлементы[0].Значение);
	ОткрытьФорму("Документ.ВКМ_ОбслуживаниеКлиента.Форма.ФормаДокумента", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередСозданием(Элемент, Начало, Конец, ЗначенияИзмерений, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ДатаПроведенияРабот", НачалоДня(Начало)); 	
	ЗначенияЗаполнения.Вставить("ВремяНачалаРабот", Начало - (НачалоДня(Начало) - Дата(1,1,1)));
	ЗначенияЗаполнения.Вставить("ВремяОкончанияРабот", Конец - (НачалоДня(Начало) - Дата(1,1,1)));	
	ЗначенияЗаполнения.Вставить("Специалист", ЗначенияИзмерений["Специалисты"]);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ОткрытьФорму("Документ.ВКМ_ОбслуживаниеКлиента.Форма.ФормаДокумента", ПараметрыФормы);
	
КонецПроцедуры
#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьПараметрыПланировщика()
	Перем ШкалаВремени;
	Объект.Планировщик.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Час;
	Объект.Планировщик.КратностьПериодическогоВарианта = 24; 
	Объект.Планировщик.ОтступСНачалаПереносаШкалыВремени = 8;
	Объект.Планировщик.ОтступСКонцаПереносаШкалыВремени = 3;

	ШкалаВремени = Объект.Планировщик.ШкалаВремени.Элементы[0];
	ШкалаВремени.Единица = ТипЕдиницыШкалыВремени.Минута;
	ШкалаВремени.Кратность = 30;
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьИзмеренияПланировщика()

	Объект.Планировщик.Измерения.Очистить();
	ИзмерениеСпециалисты = Объект.Планировщик.Измерения.Добавить("Специалисты");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ФизическиеЛица.Ссылка,
		|	ВКМ_ФизическиеЛица.Представление
		|ИЗ
		|	Справочник.ВКМ_ФизическиеЛица КАК ВКМ_ФизическиеЛица
		|ГДЕ
		|	ВКМ_ФизическиеЛица.Категория = ЗНАЧЕНИЕ(Перечисление.ВКМ_КатегорияФизическогоЛица.Специалист)
		|	И ВКМ_ФизическиеЛица.Уволен = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаСпециалисты = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаСпециалисты.Следующий() Цикл
		Специалист = ИзмерениеСпециалисты.Элементы.Добавить(ВыборкаСпециалисты.Ссылка);
        Специалист.Текст = ВыборкаСпециалисты.Представление;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОбновитьПланировщик(ДатаРабот)

	ПериодОтображенияНачало = НачалоДня(ДатаРабот);
	ПериодОтображенияКонец = КонецДня(ДатаРабот);
	Объект.Планировщик.ТекущиеПериодыОтображения.Очистить();
	Объект.Планировщик.ТекущиеПериодыОтображения.Добавить(ПериодОтображенияНачало, ПериодОтображенияКонец);
	Объект.Планировщик.Элементы.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Представление,
		|	ВКМ_ОбслуживаниеКлиента.Ссылка,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ВКМ_ОбслуживаниеКлиента.Клиент) КАК Клиент,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ВКМ_ОбслуживаниеКлиента.Договор) КАК Договор,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ВКМ_ОбслуживаниеКлиента.Специалист) КАК Специалист,
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК СпециалистСсылка,
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРаботПлан КАК ВремяНачалаРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРаботПлан КАК ВремяОкончанияРабот,
		|	ВКМ_ОбслуживаниеКлиента.ОписаниеПроблемы
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот МЕЖДУ &ПериодОтображенияНачало И &ПериодОтображенияКонец";
	
	Запрос.УстановитьПараметр("ПериодОтображенияНачало", ПериодОтображенияНачало);
	Запрос.УстановитьПараметр("ПериодОтображенияКонец", ПериодОтображенияКонец);
	
	РезультатЗапроса = Запрос.Выполнить();	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СоответствиеЗначений = Новый Соответствие;
		СоответствиеЗначений.Вставить("Специалисты", Выборка.СпециалистСсылка);		
		
		Начало  = Выборка.ДатаПроведенияРабот + (Выборка.ВремяНачалаРабот - Дата(1,1,1));
        Конец   = Выборка.ДатаПроведенияРабот + (Выборка.ВремяОкончанияРабот - Дата(1,1,1));

        НовыйЭлемент = Объект.Планировщик.Элементы.Добавить(Начало, Конец);
        НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
        НовыйЭлемент.Текст = Выборка.Клиент;
        НовыйЭлемент.Значение = Выборка.Ссылка;
		НовыйЭлемент.Подсказка = СтрШаблон("%1
		|Специалист: %2
		|Клиент: %3
		|Договор: %4
		|Дата проведения работ: %5
		|Время проведения работ: %6 - %7
		|Описание проблемы: %8
		|", Выборка.Представление, Выборка.Специалист, Выборка.Клиент, Выборка.Договор,
		Формат(Выборка.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"),
		Формат(Выборка.ВремяНачалаРабот, "ДФ=HH:mm;"), Формат(Выборка.ВремяОкончанияРабот, "ДФ=HH:mm;"),
		Выборка.ОписаниеПроблемы);
	КонецЦикла;
	
КонецПроцедуры
#КонецОбласти