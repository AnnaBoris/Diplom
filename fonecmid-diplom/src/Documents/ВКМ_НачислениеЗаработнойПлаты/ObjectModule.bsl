
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОбработчикиСобытий
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ,Режим)
	
	Если Не ПериодыКорректны() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	СформироватьДвиженияПоОкладу();	
	СформироватьДвиженияПрочиеОсновныеНачисления();
	
	СформироватьДвиженияПоНДФЛ();
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
	Движения.ВКМ_ГрафикОтпусков.Записать();
	
	РассчитатьОклад();
	РассчитатьОтпуск();
	
	СформироватьДвиженияИНачислитьПремию();
	
	РассчитатьНДФЛИВыплаты();
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции


Процедура СформироватьДвиженияПоОкладу()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗаработнойПлатыСписокСотрудников.Сотрудник,
		|	ВКМ_НачислениеЗаработнойПлатыСписокСотрудников.ВидРасчета,
		|	ВКМ_НачислениеЗаработнойПлатыСписокСотрудников.ДатаНачала,
		|	ВКМ_НачислениеЗаработнойПлатыСписокСотрудников.ДатаОкончания,
		|	ВКМ_НачислениеЗаработнойПлатыСписокСотрудников.ГрафикРаботы КАК ГрафикРаботы,
		|	ВКМ_НачислениеЗаработнойПлатыСписокСотрудников.НомерСтроки
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.ВКМ_НачислениеЗаработнойПлаты.СписокСотрудников КАК ВКМ_НачислениеЗаработнойПлатыСписокСотрудников
		|ГДЕ
		|	ВКМ_НачислениеЗаработнойПлатыСписокСотрудников.Ссылка = &Ссылка
		|	И ВКМ_НачислениеЗаработнойПлатыСписокСотрудников.ВидРасчета = &Оклад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник,
		|	ВТ_ДанныеДокумента.ДатаНачала КАК ПериодДействияНачало,
		|	ВТ_ДанныеДокумента.ДатаОкончания КАК ПериодДействияКонец,
		|	ВТ_ДанныеДокумента.ГрафикРаботы КАК ГрафикРаботы,
		|	ВТ_ДанныеДокумента.ВидРасчета КАК ВидРасчета,
		|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Показатель,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ВТ_ДанныеДокумента.Сотрудник) КАК СотрудникПредставление,
		|	ВТ_ДанныеДокумента.НомерСтроки
		|ИЗ
		|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, Сотрудник В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ВТ_ДанныеДокумента.Сотрудник
		|			ИЗ
		|				ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО ВТ_ДанныеДокумента.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ТекстСообщения = "Внимание! Отсутствуют сотрудники для начисления заработной платы. Проведение документа невозможно!";
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
		Если ВыборкаДетальныеЗаписи.Показатель = 0 Тогда
			ТекстСообщения = СтрШаблон("Внимание! Не задан оклад сотруднику ""%1"".", ВыборкаДетальныеЗаписи.СотрудникПредставление);
			ПутьКТЧ = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("СписокСотрудников", ВыборкаДетальныеЗаписи.НомерСтроки, "Сотрудник");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , ПутьКТЧ, "Объект");
		КонецЕсли;
		Движение.ПериодРегистрации = Дата;
	КонецЦикла;
	
КонецПроцедуры


Процедура СформироватьДвиженияПрочиеОсновныеНачисления()
	
	Для Каждого ТекСтрокаСписокСотрудников из СписокСотрудников Цикл
		
		Если ТекСтрокаСписокСотрудников.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = ТекСтрокаСписокСотрудников.ВидРасчета;
		Движение.Сотрудник = ТекСтрокаСписокСотрудников.Сотрудник;
		Движение.ПериодДействияНачало = ТекСтрокаСписокСотрудников.ДатаНачала;
		Движение.ПериодДействияКонец = ТекСтрокаСписокСотрудников.ДатаОкончания;
		Движение.ГрафикРаботы = ТекСтрокаСписокСотрудников.ГрафикРаботы;
		
		Если Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Движение.ПериодДействияНачало, -12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Движение.ПериодДействияНачало, -1));
			
			// Регистр ВКМ_ГрафикОтпусков
			ДвижениеОтп = Движения.ВКМ_ГрафикОтпусков.Добавить();
			ДвижениеОтп.Период = Дата;
			ДвижениеОтп.ВидДвижения = ВидДвиженияНакопления.Расход;
			ДвижениеОтп.Сотрудник = ТекСтрокаСписокСотрудников.Сотрудник;
			ДвижениеОтп.ДнейОтпуска = (НачалоДня(ТекСтрокаСписокСотрудников.ДатаОкончания) - НачалоДня(ТекСтрокаСписокСотрудников.ДатаНачала)) / (86400) + 1;

		КонецЕсли;
		

		
	КонецЦикла;
	
КонецПроцедуры


Процедура СформироватьДвиженияИНачислитьПремию()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВКМ_НачислениеЗаработнойПлатыСписокСотрудников.Сотрудник КАК Сотрудник,
		|	ВКМ_ФизическиеЛица.Категория КАК Категория
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.ВКМ_НачислениеЗаработнойПлаты.СписокСотрудников КАК ВКМ_НачислениеЗаработнойПлатыСписокСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВКМ_ФизическиеЛица КАК ВКМ_ФизическиеЛица
		|		ПО ВКМ_НачислениеЗаработнойПлатыСписокСотрудников.Сотрудник = ВКМ_ФизическиеЛица.Ссылка
		|ГДЕ
		|	ВКМ_НачислениеЗаработнойПлатыСписокСотрудников.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.ЧасовКОплатеОборот, 0) КАК ЧасовКОплате,
		|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплате
		|ИЗ
		|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&НачалоПериода, &КонецПериода,,
		|			Сотрудник В
		|			(ВЫБРАТЬ
		|				ВТ_ДанныеДокумента.Сотрудник
		|			ИЗ
		|				ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|		ПО ВТ_ДанныеДокумента.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник
		|ГДЕ
		|	ВТ_ДанныеДокумента.Категория = ЗНАЧЕНИЕ(Перечисление.ВКМ_КатегорияФизическогоЛица.Специалист)";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПроцентЗаРаботы;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.Показатель = ВыборкаДетальныеЗаписи.ЧасовКОплате;
		Движение.Результат = ВыборкаДетальныеЗаписи.СуммаКОплате;
		Движение.ПериодРегистрации = Дата;
	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисления.Записать();
КонецПроцедуры


Процедура РассчитатьОклад()

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ДнейПериодДействия КАК ДнейНорма,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ДнейФактическийПериодДействия КАК ДнейФакт
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
		|	И ВидРасчета = &Оклад) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
		
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.ОтработаноДней = ВыборкаДетальныеЗаписи.ДнейФакт;
		Движение.Результат = ?(ВыборкаДетальныеЗаписи.ДнейНорма > 0, Движение.Показатель * Движение.ОтработаноДней / ВыборкаДетальныеЗаписи.ДнейНорма, 0);
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьОтпуск()

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК РезультатБаза,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза, 0) КАК ОтработаноДнейБаза,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ДнейФактическийПериодДействия, 0) КАК ДнейФактическийПериодДействия,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ВКМ_ОсновныеНачисления.Сотрудник) КАК Сотрудник
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
		|			Регистратор = &Ссылка
		|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
		|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки = ВКМ_ОсновныеНачисления.НомерСтроки
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.ОтработаноДней = ВыборкаДетальныеЗаписи.ДнейФактическийПериодДействия;
		
		Если  ВыборкаДетальныеЗаписи.ОтработаноДнейБаза > 0 Тогда
			Движение.Показатель = ВыборкаДетальныеЗаписи.РезультатБаза / ВыборкаДетальныеЗаписи.ОтработаноДнейБаза;
			Движение.Результат = Движение.Показатель * Движение.ОтработаноДней;
			
		Иначе 
			ТекстСообщения = СтрШаблон("Внимание! Невозможно начислить отпускные сотруднику ""%1"" ввиду отсутствия базы!", ВыборкаДетальныеЗаписи.Сотрудник);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		КонецЕсли;
	
//		Если Движение.Сторно Тогда
//			Движение.Результат = - Движение.Результат;
//			Движение.ОтработаноДней = -Движение.ОтработаноДней;
//		КонецЕсли;
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура СформироватьДвиженияПоНДФЛ()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВКМ_НачислениеЗаработнойПлатыСписокСотрудников.Сотрудник
		|ИЗ
		|	Документ.ВКМ_НачислениеЗаработнойПлаты.СписокСотрудников КАК ВКМ_НачислениеЗаработнойПлатыСписокСотрудников
		|ГДЕ
		|	ВКМ_НачислениеЗаработнойПлатыСписокСотрудников.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.ПериодРегистрации = Дата;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
	
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьНДФЛИВыплаты()

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РезультатБаза КАК РезультатБазаДоп
		|ПОМЕСТИТЬ ВТ_Доп
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения, &Разрезы, Регистратор = &Ссылка
		|	И ВидРасчета = &НДФЛ) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
		|ГДЕ
		|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РегистраторРазрез = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_Удержания.НомерСтроки КАК НомерСтроки,
		|	ВКМ_Удержания.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ВТ_Доп.РезультатБазаДоп, 0) + ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК
		|		Показатель,
		|	ВКМ_НДФЛ.Значение / 100 КАК НДФЛКоэффициент
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
		|			Регистратор = &Ссылка
		|		И ВидРасчета = &НДФЛ) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Доп КАК ВТ_Доп
		|		ПО ВКМ_Удержания.НомерСтроки = ВТ_Доп.НомерСтроки,
		|	Константа.ВКМ_НДФЛ КАК ВКМ_НДФЛ
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Ссылка
		|	И ВКМ_Удержания.ВидРасчета = &НДФЛ";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Разрезы = Новый Массив;
	Разрезы.Добавить("Регистратор");
	Запрос.УстановитьПараметр("Разрезы", Разрезы);	
	
	Запрос.УстановитьПараметр("НДФЛ", ПланыВидовРасчета.ВКМ_Удержания.НДФЛ);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Начислено = ВыборкаДетальныеЗаписи.Показатель;
		НачисленоНДФЛ = Начислено * ВыборкаДетальныеЗаписи.НДФЛКоэффициент;
		СуммаКВыплате = Начислено - НачисленоНДФЛ;
		
		Движение = Движения.ВКМ_Удержания[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.Показатель = Начислено;
		Движение.Результат = НачисленоНДФЛ;
		
//		Если Движение.Сторно Тогда
//			Движение.Результат = - Движение.Результат;
//			Движение.ОтработаноДней = -Движение.ОтработаноДней;
//		КонецЕсли;
	
		//Регистр ВКМ_ВзаиморасчетыССотрудниками
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.Период = Дата;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.Сумма = СуммаКВыплате;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	КонецЦикла;
	
	
	Движения.ВКМ_Удержания.Записать(, Истина);
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	
КонецПроцедуры


Процедура ПредзаполнитьДокумент() Экспорт
	
	СписокСотрудников.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ФизическиеЛица.Ссылка
		|ИЗ
		|	Справочник.ВКМ_ФизическиеЛица КАК ВКМ_ФизическиеЛица
		|ГДЕ
		|	ВКМ_ФизическиеЛица.Уволен = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВКМ_ФизическиеЛица.Категория,
		|	ВКМ_ФизическиеЛица.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаСотрудник = СписокСотрудников.Добавить();
		СтрокаСотрудник.Сотрудник = ВыборкаДетальныеЗаписи.Ссылка;
		СтрокаСотрудник.ДатаНачала = НачалоМесяца(Дата);
		СтрокаСотрудник.ДатаОкончания = КонецМесяца(Дата);
		СтрокаСотрудник.ГрафикРаботы = Справочники.ВКМ_ГрафикиРаботы.Пятидневка;
		СтрокаСотрудник.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад;
	КонецЦикла;
	
КонецПроцедуры


Функция ПериодыКорректны()
	ПериодыКорректны = Истина;
	Для Каждого СтрокаСотрудник Из СписокСотрудников Цикл
			Если СтрокаСотрудник.ДатаОкончания < СтрокаСотрудник.ДатаНачала Тогда
				ТекстСообщения = СтрШаблон("Внимание! Некорректно задан период начисления сотруднику ""%1"".", СтрокаСотрудник.Сотрудник);
				ПутьКТЧ = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("СписокСотрудников", СтрокаСотрудник.НомерСтроки, "ДатаОкончания");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , ПутьКТЧ, "Объект");
				ПериодыКорректны = Ложь;
			КонецЕсли;
	КонецЦикла;
	Возврат ПериодыКорректны;
КонецФункции
#КонецОбласти


#КонецЕсли
